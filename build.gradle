plugins {
    id 'org.springframework.boot' version '2.2.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
//    id "com.moowork.node" version "1.3.1"
}
//apply plugin: "com.moowork.node"
group = 'com.devkoo.spring'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    compile("org.json:json:20141113")

    // api 문서화 라이브러리 swagger 추가
    compile 'io.springfox:springfox-swagger2:2.9.2'
    compile 'io.springfox:springfox-swagger-ui:2.9.2'

    // jwt 토큰 기반 의존성 추가
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // Spring security 추가
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // redis
    compile('org.springframework.boot:spring-boot-starter-data-redis')

    // 대역폭 제한
    implementation 'com.giffing.bucket4j.spring.boot.starter:bucket4j-spring-boot-starter:0.2.0'
}

test {
    useJUnitPlatform()
}

//def webappDir = "$projectDir/frontend/my-app"
//task appNpmInstall(type: NpmTask) {
//    workingDir = file("${webappDir}")
//    args = ["run", "build"]
//}
//task copyWebApp(type: Copy) {
//    from 'frontend/my-app/build' into "build/resources/main/static"
//}
//copyWebApp.dependsOn(appNpmInstall)
//compileJava.dependsOn(copyWebApp)
